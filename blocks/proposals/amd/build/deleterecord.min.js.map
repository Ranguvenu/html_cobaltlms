{"version":3,"file":"deleterecord.min.js","sources":["../src/deleterecord.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add a create new group modal to the page.\n *\n * @module     block_proposals/deleterecord\n * @class      deleterecord\n * @package    block_proposals\n * @copyright  2017 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui', 'core/templates', 'core/notification'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates, Notification) {\n          var deleterecord = function(args) {\n                this.contextid = args.contextid || 1;\n                this.args = args;\n                var self=this;\n                self.init(args);\n          };\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        deleterecord.prototype.modal = null;\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        deleterecord.prototype.contextid = -1;\n           /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n \n     return  {\n        init: function(args) {\n           return new deleterecord(args);\n        },\n\n        deleteConfirm: function(args){\n            return Str.get_strings([{\n                key: 'confirm',\n                component: 'block_proposals',\n            },\n            {\n                key: 'deleteconfirm',\n                component: 'block_proposals',\n                param : args\n            },\n            {\n                key: 'delete'\n            }\n          ]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">Yes! Delete</button>&nbsp;' +\n            '<button type=\"button\" class=\"btn btn-danger\" data-action=\"cancel\">Cancel</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        args.confirm = true;\n                        var promise = Ajax.call([{\n                            methodname: 'block_proposal_' + args.action,\n                            args: {\n                                id: args.id\n                            },\n                        }]);\n                        promise[0].done(function() {\n                            window.location.reload();\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n       load:function () {}\n\n    };\n\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","Notification","deleterecord","args","contextid","this","init","prototype","modal","deleteConfirm","get_strings","key","component","param","then","s","create","title","type","types","DEFAULT","body","footer","done","getRoot","find","on","confirm","call","methodname","action","id","window","location","reload","href","fail","ex","console","log","bind","getFooter","setBody","hide","show","load"],"mappings":";;;;;;;;;AAwBAA,sCAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,WAAY,iBAAkB,sBAC7H,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,EAAGC,UAAWC,kBACpEC,aAAe,SAASC,WACjBC,UAAYD,KAAKC,WAAa,OAC9BD,KAAOA,KACHE,KACJC,KAAKH,cAMlBD,aAAaK,UAAUC,MAAQ,KAK/BN,aAAaK,UAAUH,WAAa,EAS/B,CACLE,KAAM,SAASH,aACL,IAAID,aAAaC,OAG3BM,cAAe,SAASN,aACbT,IAAIgB,YAAY,CAAC,CACpBC,IAAK,UACLC,UAAW,mBAEf,CACID,IAAK,gBACLC,UAAW,kBACXC,MAAQV,MAEZ,CACIQ,IAAK,YAERG,KAAK,SAASC,GACXpB,aAAaqB,OAAO,CAChBC,MAAOF,EAAE,GACTG,KAAMvB,aAAawB,MAAMC,QACzBC,KAAMN,EAAE,GACRO,OAAQ,iLAETC,KAAK,SAASf,YACRA,MAAQA,MACbA,MAAMgB,UAAUC,KAAK,wBAAwBC,GAAG,QAAS,WACrDvB,KAAKwB,SAAU,EACD7B,KAAK8B,KAAK,CAAC,CACrBC,WAAY,kBAAoB1B,KAAK2B,OACrC3B,KAAM,CACF4B,GAAI5B,KAAK4B,OAGT,GAAGR,MAAK,WACZS,OAAOC,SAASC,SAChBF,OAAOC,SAASE,KAAOH,OAAOC,SAASE,QACxCC,MAAK,SAASC,IAEZC,QAAQC,IAAIF,QAEnBG,KAAKnC,OACPG,MAAMiC,YAAYhB,KAAK,0BAA0BC,GAAG,SAAS,WACzDlB,MAAMkC,QAAQ,IACdlC,MAAMmC,UAEVnC,MAAMoC,QACRJ,KAAKnC,QACTmC,KAAKnC,QAEZwC,KAAK"}