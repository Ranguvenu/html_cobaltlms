{"version":3,"file":"rejectstatus.min.js","sources":["../src/rejectstatus.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_admissions/confirm\n * @class      confirm\n * @package\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events',\n'core/fragment', 'core/ajax', 'core/yui'],\n    function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n/**\n * Constructor\n * @param {String} args used to find triggers for the new group modal.\n * Each call to init gets it's own instance of this class.\n */\nvar confirm = function(args) {\n\n    this.contextid = args.context;\n    this.id = args.id;\n    var self = this;\n    this.args = args;\n    self.init(args);\n};\n/**\n * @var {Modal} modal\n * @private\n */\nconfirm.prototype.modal = null;\n/**\n * @var {int} contextid\n * @private\n */\nconfirm.prototype.contextid = -1;\n/**\n * Initialise the class.\n * @private\n * @return {Promise}\n */\nconfirm.prototype.init = function() {\n    var self = this;\n    // Fetch the title string.\n        if (self.id) {\n            var strings  = Str.get_strings([\n                            {\n                                key: 'cancel',\n                                component: 'local_admissions'\n                            },\n                            {\n                                key: 'save_continue',\n                                component: 'local_admissions'\n                            },\n                            {\n                                key: 'rejectapplication',\n                                component: 'local_admissions'\n                            },\n                            {\n                                key: 'previous',\n                                component: 'local_admissions'\n                            },\n                            {\n                                key: 'cancel',\n                                component: 'local_admissions'\n                            }]);\n        }else{\n           var strings  = Str.get_strings([\n                        {\n                            key: 'cancel',\n                            component: 'local_admissions'\n                        },\n                        {\n                            key: 'save_continue',\n                            component: 'local_admissions'\n                        },\n                        {\n                            key: 'rejectapplication',\n                            component: 'local_admissions'\n                        },\n                        {\n                            key: 'previous',\n                            component: 'local_admissions'\n                        },\n                        {\n                            key: 'cancel',\n                            component: 'local_admissions'\n                        }]);\n        }\n\n        return strings.then(function(strings) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: strings[2],\n                body: this.getBody(),\n                footer: this.getFooter(strings),\n            });\n        }.bind(this)).then(function(modal) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n            // Forms are big, we want a big modal.\n            this.modal.setLarge(false);\n\n            this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                modal.hide();\n                setTimeout(function(){\n                    modal.destroy();\n                }, 500);\n                window.location.reload();\n            });\n            this.modal.getRoot().on('submit', 'form', function(form) {\n                self.submitFormAjax(form, self.args);\n            });\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\n            return this.modal;\n        }.bind(this));\n};\n/**\n * @param {object} formdata\n * @method getBody\n * @private\n * @return {Promise}\n */\nconfirm.prototype.getBody = function(formdata) {\n    if (typeof formdata === \"undefined\") {\n        formdata = {};\n    }\n    this.args.jsonformdata = JSON.stringify(formdata);\n    return Fragment.loadFragment('local_admissions', 'new_rejectconfirmform', this.contextid, this.args);\n};\n    /**\n    * @param {string} strings The CSS selector used to find nodes that will trigger this module.\n    * @method getFooter\n    * @private\n    * @return {Promise}\n    */\n     confirm.prototype.getFooter = function(strings) {\n       var $footer;\n       var $style;\n\n       $footer = '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+ strings[0] +'</button>';\n       $footer += '<button id=\"id_revise\" type=\"button\" class=\"btn btn-primary before_revise\" data-action=\"save\">'+\n                    strings[1] +'</button>&nbsp;';\n       $style = 'style=\"display:none;\"';\n    //    $footer = '<button id=\"id_reject\" type=\"button\" class=\"btn btn-primary beforeclick\" data-action=\"save\">'+\n    //    strings[1] +'</button>&nbsp;';\n    //    $style = 'style=\"display:none;\"';\n    //    $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"previous\" ' + $style + ' >'+\n    //              strings[3] +'</button>&nbsp;';\n    //    $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + ' >'+\n    //             strings[2] +'</button>&nbsp;';\n    //    $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+ strings[4] +'</button>';\n       return $footer;\n   };\n       /**\n    * @method handleFormSubmissionResponse\n    * @private\n    * @return {Promise}\n    */\n        confirm.prototype.handleFormSubmissionResponse = function() {\n           this.modal.destroy();\n           // We could trigger an event instead.\n           // Yuk.\n           Y.use('moodle-core-formchangechecker', function() {\n               M.core_formchangechecker.reset_form_dirty_state();\n           });\n           // This will be the context for our template. So {{name}} in the template will resolve to \"Tweety bird\".\n           window.location.reload();\n       };\n       /**\n        * @param {object} data\n        * @method handleFormSubmissionFailure\n        * @private\n        * @return {Promise}\n        */\n       confirm.prototype.handleFormSubmissionFailure = function(data) {\n           // Oh noes! Epic fail :(\n           // Ah wait - this is normal. We need to re-display the form with errors!\n           this.modal.setBody(this.getBody(data));\n       };\n       /**\n        * Private method\n        * @method submitFormAjax\n        * @private\n        * @param {Event} e Form submission event.\n        * @param {object} args\n        */\n       confirm.prototype.submitFormAjax = function(e ,args) {\n           // We don't want to do a real form submission.\n           e.preventDefault();\n           var self = this;\n           // Convert all the form elements values to a serialised string.\n           var formData = this.modal.getRoot().find('form').serialize();\n           var methodname = 'local_admissions_status_rejectconfirmform';\n           var params = {};\n           params.contextid = this.contextid;\n           params.jsonformdata = JSON.stringify(formData);\n           params.admissionid = args.admissionid;\n           params.programid = args.programid;\n           params.clickcount = args.clickcount;\n\n           if(document.getElementById(\"id_reason\").value.length !== 0)\n            {\n                $(document).on('click', '#id_reject', function(){\n                    $(this).removeClass('beforeclick').addClass('not-allowed');\n                });\n                let footer = Y.one('.modal-footer');\n                let spinner = M.util.add_spinner(Y, footer);\n                spinner.show();\n            }\n\n           var promise = Ajax.call([{\n               methodname: methodname,\n               args: params\n           }]);\n\n           promise[0].done(function(resp){\n            self.handleFormSubmissionResponse();\n               if(resp) {\n                   self.args.admissionid = resp.admissionid;\n                   self.args.programid = resp.programid;\n                   self.args.clickcount = resp.clickcount;\n                   self.handleFormSubmissionFailure();\n               } else {\n                   self.modal.destroy();\n                   window.location.reload();\n               }\n           }).fail(function(){\n               self.handleFormSubmissionFailure(formData);\n           });\n       };\n   /**\n    * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n    *\n    * @method submitForm\n    * @param {Event} e Form submission event.\n    * @private\n    */\n   confirm.prototype.submitForm = function(e) {\n       e.preventDefault();\n       var self = this;\n       self.modal.getRoot().find('form').submit();\n   };\n   return /** @alias module:local_admissins/confirm */ {\n       // Public variables and functions.\n       /**\n        * Attach event listeners to initialise this module.\n        *\n        * @method init\n        * @param {string} args The CSS selector used to find nodes that will trigger this module.\n        * @return {Promise}\n        */\n       init: function(args) {\n           return new confirm(args);\n       },\n       load: function(){\n       },\n   };\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","confirm","args","contextid","context","id","this","init","prototype","modal","self","strings","get_strings","key","component","then","create","type","types","DEFAULT","title","body","getBody","footer","getFooter","bind","setLarge","find","on","submitForm","hide","setTimeout","destroy","window","location","reload","getRoot","form","submitFormAjax","show","animate","formdata","jsonformdata","JSON","stringify","loadFragment","$footer","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","params","admissionid","programid","clickcount","document","getElementById","value","length","removeClass","addClass","one","util","add_spinner","call","methodname","done","resp","fail","submit","load"],"mappings":"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"}