{"version":3,"file":"newgroup.min.js","sources":["../src/newgroup.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_groups/groups\n * @class      Newgroups\n * @package\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {object} args\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var Newgroups = function(args) {\n        this.contextid = args.contextid;\n        this.groupsid = args.groupsid;\n        this.args = args;\n        var self = this;\n        self.init();\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    Newgroups.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    Newgroups.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @private\n     * @return {Promise}\n     */\n    Newgroups.prototype.init = function() {\n        var self = this;\n        var editid = $(this).data('value');\n         if (self.groupsid) {\n             self.groupsid = editid;\n             var head = Str.get_string('editgroup', 'local_groups');\n        }\n        else{\n              var head = Str.get_string('create_groups', 'local_groups');\n           }\n\n        return head.then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: self.getBody()\n            });\n        }.bind(self)).then(function(modal) {\n\n            // Keep a reference to the modal.\n            self.modal = modal;\n\n            self.modal.getRoot().addClass('openLMStransition local_groups');\n            // Forms are big, we want a big modal.\n            self.modal.setLarge();\n\n            // We want to reset the form every time it is opened.\n            self.modal.getRoot().on(ModalEvents.hidden, function() {\n                self.modal.setBody(self.getBody());\n                self.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                setTimeout(function(){\n                    modal.destroy();\n                }, 1000);\n            }.bind(this));\n            // We want to hide the submit buttons every time it is opened.\n            self.modal.getRoot().on(ModalEvents.shown, function() {\n                self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n            }.bind(this));\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * @param {object} formdata\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    Newgroups.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {groupsid:this.args.groupsid, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_groups', 'new_groupsform', this.args.contextid, params);\n        // return 'here';\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    Newgroups.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @param {object} data\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    Newgroups.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    Newgroups.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_groups_submit_groupsform_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    Newgroups.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n    return /** @alias module:local_groups/Newgroups */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {object} args\n         * @return {Promise}\n        */\n        init: function(args) {\n            return new Newgroups(args);\n        },\n        load: function(){\n\n        },\n        /**\n         * modal for course status.\n         *\n         * @method groupsStatus\n         * @param {object} args\n         * @return {modal}\n        */\n        groupsStatus: function(args) {\n            ModalFactory.create({\n                title: args.actionstatus,\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: args.actionstatusmsg\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText('Confirm');\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    args.confirm = true;\n                    var promise = Ajax.call([{\n                        methodname: 'local_groups_status_confirm',\n                        args: args\n                    }]);\n                    promise[0].done(function() {\n                        window.location.href = window.location.href + String();\n                    }).fail(function() {\n                        // do something with the exception\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        },\n        deletesub: function(args) {\n            ModalFactory.create({\n                title: args.actionstatus,\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: args.actionstatusmsg\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText('Confirm');\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    args.confirm = true;\n                    var params = {};\n                    params.id = args.id;\n                    var promise = Ajax.call([{\n                        methodname: 'local_groups_'+args.action,\n                        args: params\n                    }]);\n                    promise[0].done(function() {\n                        window.location.href = window.location.href + String();\n                    }).fail(function() {\n                        // do something with the exception\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Newgroups","args","contextid","groupsid","this","init","prototype","modal","self","editid","data","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","addClass","setLarge","on","hidden","setBody","animate","setTimeout","destroy","shown","append","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","e","preventDefault","formData","find","serialize","call","methodname","done","fail","submit","load","groupsStatus","actionstatus","actionstatusmsg","setSaveButtonText","confirm","window","href","String","deletesub","id","action"],"mappings":"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"}