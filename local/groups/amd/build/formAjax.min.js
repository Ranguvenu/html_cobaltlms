define("local_groups/formAjax",["jquery","core/str","core/modal_factory","core/modal_events","core/fragment","core/ajax","core/yui","core/templates","core/notification"],(function($,Str,ModalFactory,ModalEvents,Fragment,Ajax,Y,Templates,Notification){var formAjax=function(args){this.contextid=args.contextid||1,this.args=args;this.init(args)};return formAjax.prototype.modal=null,formAjax.prototype.contextid=-1,formAjax.prototype.init=function(args){var self=this;if(args.id)var head=Str.get_string("editclass","local_manager",args);else head=Str.get_string("addclass","local_manager");return head.then(function(title){return ModalFactory.create({type:ModalFactory.types.DEFAULT,title:title,body:this.getBody(),footer:this.getFooter()})}.bind(this)).then(function(modal){return this.modal=modal,this.modal.setLarge(),this.modal.getRoot().on(ModalEvents.hidden,function(){setTimeout((function(){modal.destroy()}),1e3),this.modal.setBody("")}.bind(this)),this.modal.getFooter().find('[data-action="save"]').on("click",this.submitForm.bind(this)),this.modal.getFooter().find(["data-action = cancel"]).on("click",(function(){modal.setBody(""),modal.hide(),setTimeout((function(){modal.destroy()}),1e3)})),this.modal.getFooter().find('[data-action="cancel"]').on("click",(function(){modal.hide(),setTimeout((function(){modal.destroy()}),1e3)})),this.modal.getRoot().on("submit","form",(function(form){self.submitformAjax(form,self.args)})),this.modal.show(),this.modal}.bind(this))},formAjax.prototype.getBody=function(formdata){return void 0===formdata&&(formdata={}),this.args.jsonformdata=JSON.stringify(formdata),Fragment.loadFragment(this.args.component,this.args.callback,this.contextid,this.args)},formAjax.prototype.getFooter=function(){return this.args.id?$footer='<button type="button" class="btn btn-primary" data-action="save">Update Class</button>':$footer='<button type="button" class="btn btn-primary" data-action="save">Create Class</button>',$footer+='<button type="button" class="btn btn-secondary" data-action="cancel">Cancel</button>',$footer},formAjax.prototype.getcontentFooter=function(){return $footer='<button type="button" class="btn btn-secondary" data-action="cancel">Cancel</button>',$footer},formAjax.prototype.handleFormSubmissionResponse=function(){Y.use("moodle-core-formchangechecker",(function(){M.core_formchangechecker.reset_form_dirty_state()})),this.modal.hide(),window.location.reload(),window.location.href=window.location.href},formAjax.prototype.handleFormSubmissionFailure=function(data){this.modal.setBody(this.getBody(data))},formAjax.prototype.submitformAjax=function(e,args){e.preventDefault();var self=this,formData=this.modal.getRoot().find("form").serialize(),params={};params.contextid=this.contextid,params.id=args.id,params.jsonformdata=JSON.stringify(formData),Ajax.call([{methodname:"local_manager_submit_register",args:params}])[0].done((function(resp){self.args.id=resp.id,self.args.contextid=resp.contextid,self.handleFormSubmissionResponse(self.args),window.location.reload(),window.location.href=window.location.href})).fail((function(){self.handleFormSubmissionFailure(formData)}))},formAjax.prototype.submitForm=function(e){e.preventDefault(),this.modal.getRoot().find("form").submit()},{init:function(args){return new formAjax(args)},deleteConfirm:function(args){return Str.get_strings([{key:"confirm",component:"local_manager"},{key:"deleteconfirm1",component:"local_manager",param:args},{key:"delete"}]).then(function(s){ModalFactory.create({title:s[0],type:ModalFactory.types.DEFAULT,body:s[1],footer:'<button type="button" class="btn btn-primary" data-action="save">Yes! Delete</button>&nbsp;<button type="button" class="btn btn-secondary" data-action="cancel">No</button>'}).done(function(modal){this.modal=modal,modal.getRoot().find('[data-action="save"]').on("click",function(){args.confirm=!0,Ajax.call([{methodname:"local_manager_"+args.action,args:{id:args.id}}])[0].done((function(){window.location.reload(),window.location.href=window.location.href})).fail((function(ex){console.log(ex)}))}.bind(this)),modal.getFooter().find('[data-action="cancel"]').on("click",(function(){modal.setBody(""),modal.hide()})),modal.show()}.bind(this))}.bind(this))},hideConfirm:function(args){return Str.get_strings([{key:"hideconfirmheader",component:"local_manager"},{key:"hideconfirm",component:"local_manager",param:args},{key:"hide"}]).then(function(s){ModalFactory.create({title:s[0],type:ModalFactory.types.DEFAULT,body:s[1],footer:'<button type="button" class="btn btn-primary" data-action="save">Yes! Hide</button>&nbsp;<button type="button" class="btn btn-secondary" data-action="cancel">No</button>'}).done(function(modal){this.modal=modal,modal.getRoot().find('[data-action="save"]').on("click",function(){args.confirm=!0,Ajax.call([{methodname:"local_manager_"+args.action,args:{id:args.id}}])[0].done((function(){window.location.reload(),window.location.href=window.location.href})).fail((function(ex){console.log(ex)}))}.bind(this)),modal.getFooter().find('[data-action="cancel"]').on("click",(function(){modal.setBody(""),modal.hide()})),modal.show()}.bind(this))}.bind(this))},unHideConfirm:function(args){return Str.get_strings([{key:"unhideconfirmheader",component:"local_manager"},{key:"unhideconfirm",component:"local_manager",param:args},{key:"hide"}]).then(function(s){ModalFactory.create({title:s[0],type:ModalFactory.types.DEFAULT,body:s[1],footer:'<button type="button" class="btn btn-primary" data-action="save">Yes! UnHide</button>&nbsp;<button type="button" class="btn btn-secondary" data-action="cancel">No</button>'}).done(function(modal){this.modal=modal,modal.getRoot().find('[data-action="save"]').on("click",function(){args.confirm=!0,Ajax.call([{methodname:"local_manager_"+args.action,args:{id:args.id}}])[0].done((function(){window.location.reload(),window.location.href=window.location.href})).fail((function(ex){console.log(ex)}))}.bind(this)),modal.getFooter().find('[data-action="cancel"]').on("click",(function(){modal.setBody(""),modal.hide()})),modal.show()}.bind(this))}.bind(this))},load:function(){}}}));

//# sourceMappingURL=formAjax.min.js.map