{"version":3,"file":"newcat.min.js","sources":["../src/newcat.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_program\n * @class      NewCategory\n * @package\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {object} args\n     * / @param {String} args used to find triggers for the new group modal.\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewCat = function(args) {\n        this.contextid = args.contextid;\n\n\n        this.categoryid = args.categoryid;\n        var self = this;\n        self.init(args.selector);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewCat.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewCat.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @private\n     * @return {Promise}\n     */\n    NewCat.prototype.init = function() {\n        var self = this;\n            var editid = $(this).data('value');\n            if (editid) {\n                self.instituteid = editid;\n            }\n            return Str.get_string('adnewcat', 'local_program').then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n                // Keep a reference to the modal.\n                self.modal = modal;\n                self.modal.show();\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n\n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.hidden, function() {\n                    self.modal.setBody(self.getBody());\n                }.bind(this));\n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                }.bind(this));\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                return this.modal;\n            }.bind(this));\n    };\n    /**\n     * @param {object} formdata\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewCat.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {instituteid:this.instituteid, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_program', 'new_catform', this.contextid, params);\n    };\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewCat.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n    /**\n     * @param {object} data\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewCat.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewCat.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_location_submit_catform_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewCat.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    return {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} args The CSS selector used to find nodes that will trigger this module.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new NewCat(args);\n        },\n        load: function(){\n\n        }\n    };\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewCat","args","contextid","categoryid","this","init","selector","prototype","modal","self","editid","data","instituteid","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","show","setLarge","getRoot","on","hidden","setBody","shown","append","save","submitForm","submitFormAjax","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","e","preventDefault","formData","find","serialize","call","methodname","done","fail","submit","load"],"mappings":";;;;;;;;AAQAA,8BAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,aAC/F,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,OAU5DC,OAAS,SAASC,WACbC,UAAYD,KAAKC,eAGjBC,WAAaF,KAAKE,WACZC,KACNC,KAAKJ,KAAKK,kBAOnBN,OAAOO,UAAUC,MAAQ,KAMzBR,OAAOO,UAAUL,WAAa,EAQ9BF,OAAOO,UAAUF,KAAO,eAChBI,KAAOL,KACHM,OAASjB,EAAEW,MAAMO,KAAK,gBACtBD,SACAD,KAAKG,YAAcF,QAEhBhB,IAAImB,WAAW,WAAY,iBAAiBC,KAAK,SAASC,cAEtDpB,aAAaqB,OAAO,CACvBC,KAAMtB,aAAauB,MAAMC,YACzBJ,MAAOA,MACPK,KAAMX,KAAKY,aAEjBC,KAAKb,OAAOK,KAAK,SAASN,cAExBC,KAAKD,MAAQA,MACbC,KAAKD,MAAMe,OAEXd,KAAKD,MAAMgB,WAGXf,KAAKD,MAAMiB,UAAUC,GAAG9B,YAAY+B,OAAQ,WACxClB,KAAKD,MAAMoB,QAAQnB,KAAKY,YAC1BC,KAAKlB,OAEPK,KAAKD,MAAMiB,UAAUC,GAAG9B,YAAYiC,MAAO,WACvCpB,KAAKD,MAAMiB,UAAUK,OAAO,0EAC9BR,KAAKlB,OAGPK,KAAKD,MAAMiB,UAAUC,GAAG9B,YAAYmC,KAAMtB,KAAKuB,WAAWV,KAAKb,OAE/DA,KAAKD,MAAMiB,UAAUC,GAAG,SAAU,OAAQjB,KAAKwB,eAAeX,KAAKb,OAC5DL,KAAKI,OACdc,KAAKlB,QAQfJ,OAAOO,UAAUc,QAAU,SAASa,eACR,IAAbA,WACPA,SAAW,QAGXC,OAAS,CAACvB,YAAYR,KAAKQ,YAAawB,aAAcC,KAAKC,UAAUJ,kBAClErC,SAAS0C,aAAa,gBAAiB,cAAenC,KAAKF,UAAWiC,SAOjFnC,OAAOO,UAAUiC,6BAA+B,gBACvChC,MAAMiC,OAGX1C,EAAE2C,IAAI,iCAAiC,WACnCC,EAAEC,uBAAuBC,4BAE7BC,SAASC,SAASC,UAQtBhD,OAAOO,UAAU0C,4BAA8B,SAAStC,WAG/CH,MAAMoB,QAAQxB,KAAKiB,QAAQV,QASpCX,OAAOO,UAAU0B,eAAiB,SAASiB,GAEvCA,EAAEC,qBAGEC,SAAWhD,KAAKI,MAAMiB,UAAU4B,KAAK,QAAQC,YAEjDxD,KAAKyD,KAAK,CAAC,CACPC,WAAY,qCACZvD,KAAM,CAACC,UAAWE,KAAKF,UAAWkC,aAAcC,KAAKC,UAAUc,WAC/DK,KAAMrD,KAAKoC,6BAA6BlB,KAAKlB,KAAMgD,UACnDM,KAAMtD,KAAK6C,4BAA4B3B,KAAKlB,KAAMgD,cAU1DpD,OAAOO,UAAUyB,WAAa,SAASkB,GACnCA,EAAEC,iBACS/C,KACNI,MAAMiB,UAAU4B,KAAK,QAAQM,UAG/B,CASHtD,KAAM,SAASJ,aACJ,IAAID,OAAOC,OAEtB2D,KAAM"}